//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ComposTux.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProyectosEntities : DbContext
    {
        public ProyectosEntities()
            : base("name=ProyectosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int spDelAssigmentColony(Nullable<System.Guid> idAssigmentColony)
        {
            var idAssigmentColonyParameter = idAssigmentColony.HasValue ?
                new ObjectParameter("IdAssigmentColony", idAssigmentColony) :
                new ObjectParameter("IdAssigmentColony", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDelAssigmentColony", idAssigmentColonyParameter);
        }
    
        public virtual int spDelInformationCartel(Nullable<System.Guid> idInofrmation)
        {
            var idInofrmationParameter = idInofrmation.HasValue ?
                new ObjectParameter("IdInofrmation", idInofrmation) :
                new ObjectParameter("IdInofrmation", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDelInformationCartel", idInofrmationParameter);
        }
    
        public virtual int spDelToken(Nullable<System.Guid> idUser)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDelToken", idUserParameter);
        }
    
        public virtual int spDelUser(Nullable<System.Guid> idUser)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDelUser", idUserParameter);
        }
    
        public virtual int spInsAssigmentColony(Nullable<System.Guid> idColony, Nullable<System.Guid> idUser)
        {
            var idColonyParameter = idColony.HasValue ?
                new ObjectParameter("IdColony", idColony) :
                new ObjectParameter("IdColony", typeof(System.Guid));
    
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsAssigmentColony", idColonyParameter, idUserParameter);
        }
    
        public virtual int spInsColony(string name, string address, Nullable<System.Guid> idProject)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var idProjectParameter = idProject.HasValue ?
                new ObjectParameter("IdProject", idProject) :
                new ObjectParameter("IdProject", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsColony", nameParameter, addressParameter, idProjectParameter);
        }
    
        public virtual int spInsInformationCartel(Nullable<System.Guid> idUser, string urlImage, string description)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            var urlImageParameter = urlImage != null ?
                new ObjectParameter("UrlImage", urlImage) :
                new ObjectParameter("UrlImage", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsInformationCartel", idUserParameter, urlImageParameter, descriptionParameter);
        }
    
        public virtual int spInsProject(string name, string responsable)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var responsableParameter = responsable != null ?
                new ObjectParameter("Responsable", responsable) :
                new ObjectParameter("Responsable", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsProject", nameParameter, responsableParameter);
        }
    
        public virtual ObjectResult<spSelAllInformationCartel_Result> spSelAllInformationCartel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelAllInformationCartel_Result>("spSelAllInformationCartel");
        }
    
        public virtual ObjectResult<spSelAssigmentColony_Result> spSelAssigmentColony(Nullable<System.Guid> idUser)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelAssigmentColony_Result>("spSelAssigmentColony", idUserParameter);
        }
    
        public virtual ObjectResult<spSelInformationCartel_Result> spSelInformationCartel(Nullable<System.Guid> idUser)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelInformationCartel_Result>("spSelInformationCartel", idUserParameter);
        }
    
        public virtual ObjectResult<spSelToken_Result> spSelToken(Nullable<System.Guid> idUser)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelToken_Result>("spSelToken", idUserParameter);
        }
    
        public virtual ObjectResult<spSelUser_Result> spSelUser(string nameUser, string password)
        {
            var nameUserParameter = nameUser != null ?
                new ObjectParameter("NameUser", nameUser) :
                new ObjectParameter("NameUser", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelUser_Result>("spSelUser", nameUserParameter, passwordParameter);
        }
    
        public virtual int spUpdAssigmentColony(Nullable<System.Guid> idAssigmentColony, Nullable<System.Guid> idColony, Nullable<System.Guid> idUser)
        {
            var idAssigmentColonyParameter = idAssigmentColony.HasValue ?
                new ObjectParameter("IdAssigmentColony", idAssigmentColony) :
                new ObjectParameter("IdAssigmentColony", typeof(System.Guid));
    
            var idColonyParameter = idColony.HasValue ?
                new ObjectParameter("IdColony", idColony) :
                new ObjectParameter("IdColony", typeof(System.Guid));
    
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdAssigmentColony", idAssigmentColonyParameter, idColonyParameter, idUserParameter);
        }
    
        public virtual int spUpdInformationCartel(Nullable<System.Guid> idInformationCartel, string urlImage, string description)
        {
            var idInformationCartelParameter = idInformationCartel.HasValue ?
                new ObjectParameter("IdInformationCartel", idInformationCartel) :
                new ObjectParameter("IdInformationCartel", typeof(System.Guid));
    
            var urlImageParameter = urlImage != null ?
                new ObjectParameter("UrlImage", urlImage) :
                new ObjectParameter("UrlImage", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdInformationCartel", idInformationCartelParameter, urlImageParameter, descriptionParameter);
        }
    
        public virtual int spUpdToken(Nullable<System.Guid> idUser, string playerId, string pushToken)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            var playerIdParameter = playerId != null ?
                new ObjectParameter("PlayerId", playerId) :
                new ObjectParameter("PlayerId", typeof(string));
    
            var pushTokenParameter = pushToken != null ?
                new ObjectParameter("PushToken", pushToken) :
                new ObjectParameter("PushToken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdToken", idUserParameter, playerIdParameter, pushTokenParameter);
        }
    
        public virtual int spUpdUser(Nullable<System.Guid> idUser, string nameUser, string lastNameUser, string userName, string email, string passwordUser, string latitud, string longitud)
        {
            var idUserParameter = idUser.HasValue ?
                new ObjectParameter("IdUser", idUser) :
                new ObjectParameter("IdUser", typeof(System.Guid));
    
            var nameUserParameter = nameUser != null ?
                new ObjectParameter("NameUser", nameUser) :
                new ObjectParameter("NameUser", typeof(string));
    
            var lastNameUserParameter = lastNameUser != null ?
                new ObjectParameter("LastNameUser", lastNameUser) :
                new ObjectParameter("LastNameUser", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordUserParameter = passwordUser != null ?
                new ObjectParameter("PasswordUser", passwordUser) :
                new ObjectParameter("PasswordUser", typeof(string));
    
            var latitudParameter = latitud != null ?
                new ObjectParameter("Latitud", latitud) :
                new ObjectParameter("Latitud", typeof(string));
    
            var longitudParameter = longitud != null ?
                new ObjectParameter("Longitud", longitud) :
                new ObjectParameter("Longitud", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spUpdUser", idUserParameter, nameUserParameter, lastNameUserParameter, userNameParameter, emailParameter, passwordUserParameter, latitudParameter, longitudParameter);
        }
    
        public virtual int spInsUser(string name, string lastName, string userName, string email, string password, string latitud, string longitud, string playerId, string puskToken)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var latitudParameter = latitud != null ?
                new ObjectParameter("Latitud", latitud) :
                new ObjectParameter("Latitud", typeof(string));
    
            var longitudParameter = longitud != null ?
                new ObjectParameter("Longitud", longitud) :
                new ObjectParameter("Longitud", typeof(string));
    
            var playerIdParameter = playerId != null ?
                new ObjectParameter("playerId", playerId) :
                new ObjectParameter("playerId", typeof(string));
    
            var puskTokenParameter = puskToken != null ?
                new ObjectParameter("puskToken", puskToken) :
                new ObjectParameter("puskToken", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsUser", nameParameter, lastNameParameter, userNameParameter, emailParameter, passwordParameter, latitudParameter, longitudParameter, playerIdParameter, puskTokenParameter);
        }
    
        public virtual ObjectResult<spSelAllColony_Result> spSelAllColony()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spSelAllColony_Result>("spSelAllColony");
        }
    }
}
